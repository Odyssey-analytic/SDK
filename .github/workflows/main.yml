name: Build, Version Bump, and Publish to GitHub Packages

on:
  push:
    branches:
      - build
  workflow_dispatch:

permissions:
  contents: write
  packages: write

jobs:
  build-pack-publish:
    runs-on: windows-latest

    steps:
      - name: üßæ Checkout repository
        uses: actions/checkout@v3
            
      - name: üì¶ Restore dependencies
        run: dotnet restore OdysseyAnalytics.sln

      - name: üèóÔ∏è Build all projects (Release)
        run: dotnet build OdysseyAnalytics.sln --configuration Release --no-restore

      - name: üî¢ Auto bump versions for changed projects
        shell: bash
        run: |
          bump_version() {
            file=$1
            project_dir=$(dirname "$file")
          
            if git diff --name-only $GITHUB_SHA $(git merge-base origin/build HEAD) | grep -q "^$project_dir/"; then
              echo "üîç Changes detected in $project_dir"
              old_version=$(grep '<Version>' "$file" | sed -E 's/.*<Version>(.*)<\/Version>.*/\1/')
              major=$(echo $old_version | cut -d. -f1)
              minor=$(echo $old_version | cut -d. -f2)
              patch=$(echo $old_version | cut -d. -f3)
              new_version="$major.$minor.$((patch+1))"
              echo "‚¨ÜÔ∏è Bumping version: $old_version ‚Üí $new_version"
              powershell -Command "(Get-Content '$file') -replace '<Version>.*</Version>', '<Version>$new_version</Version>' | Set-Content '$file'"
            else
              echo "‚úÖ No changes in $project_dir"
            fi
          }

          bump_version Core/odysseyAnalytics.Core.csproj
          bump_version Adapters/Logger/odysseyAnalytics.Adapters.Logger.csproj
          bump_version Adapters/REST/odysseyAnalytics.Adapters.REST.csproj
          bump_version Adapters/RabbitMQ/odysseyAnalytics.Adapter.RabbitMQ.csproj
          bump_version Adapters/Sqlite/odysseyAnalytics.Adapters.Sqlite.csproj

      - name: üöÄ Commit version changes
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git add Core/*.csproj Adapters/*/*.csproj
          git diff --cached --quiet || git commit -m "üîñ Auto-bump version for modified projects"
          git push

      - name: üì¶ Pack all projects
        run: |
          dotnet pack Core/odysseyAnalytics.Core.csproj -c Release -o ./nupkgs
          dotnet pack Adapters/Logger/odysseyAnalytics.Adapters.Logger.csproj -c Release -o ./nupkgs
          dotnet pack Adapters/REST/odysseyAnalytics.Adapters.REST.csproj -c Release -o ./nupkgs
          dotnet pack Adapters/RabbitMQ/OdysseyAnalytics.Adapter.RabbitMQ.csproj -c Release -o ./nupkgs
          dotnet pack Adapters/Sqlite/odysseyAnalytics.Adapters.Sqlite.csproj -c Release -o ./nupkgs

      - name: üöÄ Publish to GitHub Packages
        shell: pwsh
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
        run: |
          $ErrorActionPreference = "Stop"
          $source = "https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json"
          Get-ChildItem -Path ./nupkgs -Filter *.nupkg | ForEach-Object {
            $file = $_.FullName
            Write-Host "Pushing $file to $source"
            dotnet nuget push "$file" --api-key "$env:GITHUB_TOKEN" --source "$source"
          }

